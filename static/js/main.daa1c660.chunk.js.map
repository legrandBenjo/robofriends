{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["CardList","_ref","robots","Error","SearchBox","searchfield","searchChange","react_default","a","createElement","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","name","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"yNAyBeA,EAtBE,SAAAC,GAAaA,EAAXC,OAEX,MAAM,IAAIC,MAAM,aCSTC,EAZG,SAAAH,GAAiCA,EAA/BI,YAA+B,IAAlBC,EAAkBL,EAAlBK,aAC7B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mCACbC,KAAK,SACLC,YAAY,gBACZC,SAAUP,MCGXQ,EATA,SAACC,GAEZ,OACIR,EAAAC,EAAAC,cAAA,OAAKO,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEJ,EAAMK,WCcJC,cAjBX,SAAAA,EAAYN,GAAM,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACdC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMV,KACDc,MAAQ,CACTC,UAAU,GAHAR,iFAMAS,EAAOC,GACrBP,KAAKQ,SAAS,CAACH,UAAU,qCAGzB,OAAGL,KAAKI,MAAMC,SACHvB,EAAAC,EAAAC,cAAA,mCAEJgB,KAAKV,MAAMK,gBAdCc,aCgDZC,qBAzCX,SAAAA,IAAa,IAAAb,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAU,IACTb,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAY,GAAAP,KAAAH,QAcJW,eAAiB,SAACC,GACdf,EAAKW,SAAS,CAAC5B,YAAagC,EAAMC,OAAOC,SAdzCjB,EAAKO,MAAQ,CACT3B,OAAQ,GACRG,YAAa,IAJRiB,mFAQM,IAAAkB,EAAAf,KACfgB,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAKA,EAASC,SAC3BF,KAAK,SAAAG,GAAK,OAAIL,EAAKP,SAAS,CAAC/B,OAAO2C,uCAQhC,IAAAC,EACyBrB,KAAKI,MAA5B3B,EADF4C,EACE5C,OAAQG,EADVyC,EACUzC,YACT0C,EAAiB7C,EAAO8C,OAAO,SAAAC,GACjC,OAAOA,EAAMC,KAAKC,cAAcC,SAAS/C,EAAY8C,iBAEzD,OAAQjD,EAAOmD,OAGX9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,gBACAH,EAAAC,EAAAC,cAAC6C,EAAD,CAAWhD,aAAgBmB,KAAKW,iBAChC7B,EAAAC,EAAAC,cAAC8C,EAAD,KACIhD,EAAAC,EAAAC,cAAC+C,EAAD,KACIjD,EAAAC,EAAAC,cAACgD,EAAD,CAAUvD,OAAU6C,OAPpCxC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,uBA1BUwB,oBCAlBwB,IAASC,WAAWC,SAASC,eAAe,SAASC,OACnDvD,EAAAC,EAAAC,cAACF,EAAAC,EAAMuD,WAAP,KACCxD,EAAAC,EAAAC,cAACuD,EAAD","file":"static/js/main.daa1c660.chunk.js","sourcesContent":["import React from \"react\";\nimport Card  from \"./Card\";\n\nconst CardList = ({robots}) =>{\n    if(true){\n        throw new Error('Nooooo !');\n    }\n    return(\n        <React.StrictMode>\n            {\n                robots.map((user, i) =>{\n                    return (\n                    <Card \n                        key={i} \n                        id= {robots[i].id} \n                        name= {robots[i].name} \n                        email={robots[i].email}\n                    />\n                    );\n                })\n            };\n        </React.StrictMode>\n    );\n}\n\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return (\n        <div className=\"pa2\">\n            <input className=\"pa3 ba b--green bg-lightest-blue\"\n                type='search' \n                placeholder=\"search robots\"\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from \"react\";\n\nconst Scroll = (props) => {\n    //console.log(props);\n    return (\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, {Component} from \"react\";\n\nclass ErrorBoundry extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n    componentDidCatch(error, info){\n        this.setState({hasError: true})\n    }\n    render(){\n        if(this.state.hasError){\n            return <h1>Ooops that's not good</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\"\nimport Scroll from '../components/Scroll.js';\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport './App.css';\n\n\nclass App extends Component{\n    constructor(){\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''    \n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response =>  response.json())\n        .then(users => this.setState({robots:users}));\n       \n    }\n\n    onSearchChange = (event) =>{\n        this.setState({searchfield: event.target.value});\n    }\n\n    render (){\n        const {robots, searchfield} = this.state;\n        const filteredRobots = robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        return !robots.length ?\n        <h1 className=\"tc\">Loding . . .</h1> :\n        (\n            <div className=\"tc\">\n                <h1 className=\"f1\">RobotFriends</h1>\n                <SearchBox searchChange = {this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots = {filteredRobots}/>\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        );\n     }\n    \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App.js'\nimport 'tachyons'\n\n//import registerServiveWorker from './registerServiceWorker'\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n   <App/>\n  </React.StrictMode>\n);\n//ReactDOM.render( <Hello/>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//registerServiceWorker();\n"],"sourceRoot":""}